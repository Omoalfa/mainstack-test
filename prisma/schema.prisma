// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  email         String      @unique
  name          String 
  img           String?
  password      String
  is_verified   Boolean     @default(false)
  pwd_reset_key String?
  ver_key       String?
  products      Product[]
  cart          CartItem[]
  orders        Order[]
  created_at    DateTime    @default(now())
  deleted_at    DateTime?
}

model Product {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Int
  description   String
  img           String
  owner         User        @relation(fields: [owner_id], references: [id])
  owner_id       String      @db.ObjectId
  carts         CartItem[]
  orders        OrderProducts[]
  created_at    DateTime     @default(now())
}

model CartItem {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  stock         Int
  user_id        String      @db.ObjectId
  user          User        @relation(fields: [user_id], references: [id])
  added_at      DateTime    @default(now())
  product_id     String      @db.ObjectId
  product       Product     @relation(fields: [product_id], references: [id])
}

model OrderProducts {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  product_id     String      @db.ObjectId
  product       Product     @relation(fields: [product_id], references: [id])
  order_id      String       @db.ObjectId
  order         Order        @relation(fields: [order_id], references: [id])
  stock         Int
  unit_price    Int
  total_price   Int
}

model Order {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  amount        Int
  refrence_id   String      @unique
  user          User        @relation(fields: [user_id], references: [id])
  user_id        String      @db.ObjectId
  product_id     String      @db.ObjectId
  order_products OrderProducts[]
  created_at     DateTime     @default(now())
}
